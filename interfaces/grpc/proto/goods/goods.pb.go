// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: goods.proto

package proto

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_goods_proto protoreflect.FileDescriptor

var file_goods_proto_rawDesc = []byte{
	0x0a, 0x0b, 0x67, 0x6f, 0x6f, 0x64, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0e, 0x73, 0x79, 0x73, 0x5f, 0x6d, 0x65,
	0x6e, 0x75, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x32, 0xac, 0x02, 0x0a, 0x05, 0x47, 0x6f, 0x6f,
	0x64, 0x73, 0x12, 0x35, 0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x4d,
	0x65, 0x6e, 0x75, 0x12, 0x11, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53, 0x79, 0x73, 0x4d,
	0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x1a, 0x11, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x53,
	0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x73, 0x70, 0x12, 0x3a, 0x0a, 0x0d, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x11, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x12, 0x3a, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x11, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x53,
	0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x12, 0x37, 0x0a, 0x0f, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75,
	0x42, 0x79, 0x49, 0x64, 0x12, 0x13, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x79, 0x73, 0x4d, 0x65,
	0x6e, 0x75, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x46, 0x69, 0x6e, 0x64,
	0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x52, 0x73, 0x70, 0x12, 0x3b, 0x0a, 0x0f, 0x46, 0x69,
	0x6e, 0x64, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x50, 0x61, 0x67, 0x65, 0x12, 0x13, 0x2e,
	0x46, 0x69, 0x6e, 0x64, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75, 0x50, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x13, 0x2e, 0x46, 0x69, 0x6e, 0x64, 0x53, 0x79, 0x73, 0x4d, 0x65, 0x6e, 0x75,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x73, 0x70, 0x42, 0x09, 0x5a, 0x07, 0x2e, 0x3b, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_goods_proto_goTypes = []interface{}{
	(*CreateSysMenuReq)(nil),   // 0: CreateSysMenuReq
	(*DeleteSysMenuReq)(nil),   // 1: DeleteSysMenuReq
	(*UpdateSysMenuReq)(nil),   // 2: UpdateSysMenuReq
	(*FindSysMenuByIdReq)(nil), // 3: FindSysMenuByIdReq
	(*FindSysMenuPageReq)(nil), // 4: FindSysMenuPageReq
	(*CreateSysMenuRsp)(nil),   // 5: CreateSysMenuRsp
	(*emptypb.Empty)(nil),      // 6: google.protobuf.Empty
	(*FindSysMenuRsp)(nil),     // 7: FindSysMenuRsp
	(*FindSysMenuPageRsp)(nil), // 8: FindSysMenuPageRsp
}
var file_goods_proto_depIdxs = []int32{
	0, // 0: Goods.CreateSysMenu:input_type -> CreateSysMenuReq
	1, // 1: Goods.DeleteSysMenu:input_type -> DeleteSysMenuReq
	2, // 2: Goods.UpdateSysMenu:input_type -> UpdateSysMenuReq
	3, // 3: Goods.FindSysMenuById:input_type -> FindSysMenuByIdReq
	4, // 4: Goods.FindSysMenuPage:input_type -> FindSysMenuPageReq
	5, // 5: Goods.CreateSysMenu:output_type -> CreateSysMenuRsp
	6, // 6: Goods.DeleteSysMenu:output_type -> google.protobuf.Empty
	6, // 7: Goods.UpdateSysMenu:output_type -> google.protobuf.Empty
	7, // 8: Goods.FindSysMenuById:output_type -> FindSysMenuRsp
	8, // 9: Goods.FindSysMenuPage:output_type -> FindSysMenuPageRsp
	5, // [5:10] is the sub-list for method output_type
	0, // [0:5] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_goods_proto_init() }
func file_goods_proto_init() {
	if File_goods_proto != nil {
		return
	}
	file_common_proto_init()
	file_sys_menu_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_goods_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_goods_proto_goTypes,
		DependencyIndexes: file_goods_proto_depIdxs,
	}.Build()
	File_goods_proto = out.File
	file_goods_proto_rawDesc = nil
	file_goods_proto_goTypes = nil
	file_goods_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// GoodsClient is the client API for Goods service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type GoodsClient interface {
	// sys_menu
	CreateSysMenu(ctx context.Context, in *CreateSysMenuReq, opts ...grpc.CallOption) (*CreateSysMenuRsp, error)
	DeleteSysMenu(ctx context.Context, in *DeleteSysMenuReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	UpdateSysMenu(ctx context.Context, in *UpdateSysMenuReq, opts ...grpc.CallOption) (*emptypb.Empty, error)
	FindSysMenuById(ctx context.Context, in *FindSysMenuByIdReq, opts ...grpc.CallOption) (*FindSysMenuRsp, error)
	FindSysMenuPage(ctx context.Context, in *FindSysMenuPageReq, opts ...grpc.CallOption) (*FindSysMenuPageRsp, error)
}

type goodsClient struct {
	cc grpc.ClientConnInterface
}

func NewGoodsClient(cc grpc.ClientConnInterface) GoodsClient {
	return &goodsClient{cc}
}

func (c *goodsClient) CreateSysMenu(ctx context.Context, in *CreateSysMenuReq, opts ...grpc.CallOption) (*CreateSysMenuRsp, error) {
	out := new(CreateSysMenuRsp)
	err := c.cc.Invoke(ctx, "/Goods/CreateSysMenu", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goodsClient) DeleteSysMenu(ctx context.Context, in *DeleteSysMenuReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/Goods/DeleteSysMenu", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goodsClient) UpdateSysMenu(ctx context.Context, in *UpdateSysMenuReq, opts ...grpc.CallOption) (*emptypb.Empty, error) {
	out := new(emptypb.Empty)
	err := c.cc.Invoke(ctx, "/Goods/UpdateSysMenu", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goodsClient) FindSysMenuById(ctx context.Context, in *FindSysMenuByIdReq, opts ...grpc.CallOption) (*FindSysMenuRsp, error) {
	out := new(FindSysMenuRsp)
	err := c.cc.Invoke(ctx, "/Goods/FindSysMenuById", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *goodsClient) FindSysMenuPage(ctx context.Context, in *FindSysMenuPageReq, opts ...grpc.CallOption) (*FindSysMenuPageRsp, error) {
	out := new(FindSysMenuPageRsp)
	err := c.cc.Invoke(ctx, "/Goods/FindSysMenuPage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// GoodsServer is the server API for Goods service.
type GoodsServer interface {
	// sys_menu
	CreateSysMenu(context.Context, *CreateSysMenuReq) (*CreateSysMenuRsp, error)
	DeleteSysMenu(context.Context, *DeleteSysMenuReq) (*emptypb.Empty, error)
	UpdateSysMenu(context.Context, *UpdateSysMenuReq) (*emptypb.Empty, error)
	FindSysMenuById(context.Context, *FindSysMenuByIdReq) (*FindSysMenuRsp, error)
	FindSysMenuPage(context.Context, *FindSysMenuPageReq) (*FindSysMenuPageRsp, error)
}

// UnimplementedGoodsServer can be embedded to have forward compatible implementations.
type UnimplementedGoodsServer struct {
}

func (*UnimplementedGoodsServer) CreateSysMenu(context.Context, *CreateSysMenuReq) (*CreateSysMenuRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateSysMenu not implemented")
}
func (*UnimplementedGoodsServer) DeleteSysMenu(context.Context, *DeleteSysMenuReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteSysMenu not implemented")
}
func (*UnimplementedGoodsServer) UpdateSysMenu(context.Context, *UpdateSysMenuReq) (*emptypb.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateSysMenu not implemented")
}
func (*UnimplementedGoodsServer) FindSysMenuById(context.Context, *FindSysMenuByIdReq) (*FindSysMenuRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindSysMenuById not implemented")
}
func (*UnimplementedGoodsServer) FindSysMenuPage(context.Context, *FindSysMenuPageReq) (*FindSysMenuPageRsp, error) {
	return nil, status.Errorf(codes.Unimplemented, "method FindSysMenuPage not implemented")
}

func RegisterGoodsServer(s *grpc.Server, srv GoodsServer) {
	s.RegisterService(&_Goods_serviceDesc, srv)
}

func _Goods_CreateSysMenu_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateSysMenuReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodsServer).CreateSysMenu(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Goods/CreateSysMenu",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodsServer).CreateSysMenu(ctx, req.(*CreateSysMenuReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Goods_DeleteSysMenu_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteSysMenuReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodsServer).DeleteSysMenu(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Goods/DeleteSysMenu",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodsServer).DeleteSysMenu(ctx, req.(*DeleteSysMenuReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Goods_UpdateSysMenu_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateSysMenuReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodsServer).UpdateSysMenu(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Goods/UpdateSysMenu",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodsServer).UpdateSysMenu(ctx, req.(*UpdateSysMenuReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Goods_FindSysMenuById_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindSysMenuByIdReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodsServer).FindSysMenuById(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Goods/FindSysMenuById",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodsServer).FindSysMenuById(ctx, req.(*FindSysMenuByIdReq))
	}
	return interceptor(ctx, in, info, handler)
}

func _Goods_FindSysMenuPage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(FindSysMenuPageReq)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(GoodsServer).FindSysMenuPage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/Goods/FindSysMenuPage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(GoodsServer).FindSysMenuPage(ctx, req.(*FindSysMenuPageReq))
	}
	return interceptor(ctx, in, info, handler)
}

var _Goods_serviceDesc = grpc.ServiceDesc{
	ServiceName: "Goods",
	HandlerType: (*GoodsServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateSysMenu",
			Handler:    _Goods_CreateSysMenu_Handler,
		},
		{
			MethodName: "DeleteSysMenu",
			Handler:    _Goods_DeleteSysMenu_Handler,
		},
		{
			MethodName: "UpdateSysMenu",
			Handler:    _Goods_UpdateSysMenu_Handler,
		},
		{
			MethodName: "FindSysMenuById",
			Handler:    _Goods_FindSysMenuById_Handler,
		},
		{
			MethodName: "FindSysMenuPage",
			Handler:    _Goods_FindSysMenuPage_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "goods.proto",
}
